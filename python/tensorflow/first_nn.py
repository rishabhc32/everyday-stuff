# -*- coding: utf-8 -*-
"""first_nn

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ll9OGSxczA79QZgkoDLmPNBQczZSzk9P
"""

import tensorflow as tf
import numpy as np

tf.logging.set_verbosity(tf.logging.ERROR)

train_celsius = np.array([-40, -10, 0, 8, 15, 22, 38], dtype=float)
train_farenheit = np.array([-40, 14, 32, 46, 59, 72, 100], dtype=float)

for i,c in enumerate(train_celsius):
  print("{} Celsius = {} Farenheit".format(c, train_farenheit[i]))

layer_0 = tf.keras.layers.Dense(units=1, input_shape=[1])
model = tf.keras.Sequential([layer_0])

model.compile(loss='mean_squared_error', 
             optimizer=tf.keras.optimizers.Adam(0.1))

history = model.fit(train_celsius, train_farenheit, epochs=500, verbose=True)

import matplotlib.pyplot as plt
plt.xlabel('Epoch Label')
plt.ylabel('Loss Number')
plt.plot(history.history['loss'])

print(model.predict([100.0]))
print("These are the layers variables: {}".format(layer_0.get_weights()))

layer_0 = tf.keras.layers.Dense(units=4, input_shape=[1])
layer_1 = tf.keras.layers.Dense(units=4)
layer_2 = tf.keras.layers.Dense(units=1)

model = tf.keras.Sequential([layer_0, layer_1, layer_2])
model.compile(loss='mean_squared_error', optimizer=tf.keras.optimizers.Adam(0.1))
model.fit(train_celsius, train_farenheit, epochs=500, verbose=False)

print("Model predicts that 100 degrees Celsius is: {} degrees Fahrenheit".format(model.predict([100.0])))
print("These are the l0 variables: {}".format(layer_0.get_weights()))
print("These are the l1 variables: {}".format(layer_1.get_weights()))
print("These are the l2 variables: {}".format(layer_2.get_weights()))