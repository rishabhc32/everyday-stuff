# -*- coding: utf-8 -*-
"""intro_to_tensorflow

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IjargkQsuPxU63dvQVoD5IYVq4cXcwCo
"""

import tensorflow as tf
tf.enable_eager_execution()
import numpy as np
import matplotlib.pyplot as plt

a = tf.constant(15, name="a")
b = tf.constant(61, name="b")
c = tf.add(a, b, name="c")

print(c, type(c) , sep="\n")

def graph(a, b):
  a, b = tf.constant(a, name="a"), tf.constant(b, name="b")
  c = tf.add(a, b, name="c")
  d = tf.subtract(b, tf.constant(1, dtype=tf.float32), name="d")
  e = tf.multiply(d, c, name="e")
  
  return e

a,b = 1.5,2.5
print(graph(a,b))

def my_layer(x, n_in, n_out):
  W = tf.Variable( tf.ones((n_in, n_out), dtype=tf.float32) )
  b = tf.Variable( tf.zeros((1, n_out), dtype=tf.float32) )
  
  z = tf.add(tf.matmul(x, W), b)
  
  out = tf.sigmoid(z)
  return out

x_input = tf.constant([[1,2]], shape=(1,2), dtype=tf.float32)
print(my_layer(x_input, 2, 3))

n_input = 2
n_output = 3

model = tf.keras.Sequential()
dense_layer = tf.keras.layers.Dense(n_output, input_shape=(n_input,), activation='sigmoid')
model.add(dense_layer)

x_input = tf.constant([[1,2]], shape=(1,2), dtype=tf.float32)
print(model(x_input))