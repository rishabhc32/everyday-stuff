# -*- coding: utf-8 -*-
"""intro_to_pandas_tensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z4QVn1p4GPnokqPeZ_blSRlfha4EAv1Z
"""

import pandas as pd

california_housing_data = pd.read_csv("https://download.mlcc.google.com/mledu-datasets/california_housing_train.csv", sep=",")
california_housing_data.describe()

california_housing_data.hist('housing_median_age')

from IPython import display
from matplotlib import cm
from matplotlib import gridspec
from matplotlib import pyplot as plt
import numpy as np
import pandas as pd
from sklearn import metrics
import tensorflow as tf
from tensorflow.python.data import Dataset

tf.logging.set_verbosity(tf.logging.ERROR)
pd.options.display.max_rows = 10
pd.options.display.float_format = '{:.1f}'.format

housing_data = pd.read_csv("https://download.mlcc.google.com/mledu-datasets/california_housing_train.csv", sep=",")

housing_data

housing_data = housing_data.reindex(
  np.random.permutation(housing_data.index))

housing_data["median_house_value"] /= 1000.0
housing_data

my_feature = housing_data[["total_rooms"]]
targets = housing_data["median_house_value"]
feature_column = [tf.feature_column.numeric_column('total_rooms')]
targets

my_optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.0000001)
my_optimzer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)

liner_regressor = tf.estimator.LinearRegressor(feature_columns=feature_column, optimizer=my_optimizer)

